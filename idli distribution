
def distribute_idlis(citizens):
    return distribute_helper(citizens, 0)

def distribute_helper(citizens, idx):
    if idx >= len(citizens):
        return 0

    if is_even(citizens[idx]):
        return distribute_helper(citizens, idx + 1)

    if idx == len(citizens) - 1:
        return -1

    distribute_to_next(citizens, idx)
    next_distribution = distribute_helper(citizens, idx + 1)

    if next_distribution == -1:
        return -1

    return 1 + next_distribution

def is_even(num):
    return num % 2 == 0

def distribute_to_next(citizens, idx):
    citizens[idx] += 1
    citizens[idx + 1] += 1

# Test cases
test_cases = [
    [2, 4, 6, 8],
    [1, 3, 5, 7],
    [2, 3, 5, 6],
    [2, 4, 5, 7],
    [1],
    [],
    list(range(2, 101))
]

for idx, test_case in enumerate(test_cases):
    print(f"Test case {idx + 1}: {test_case}")
    print("Minimum number of idlis to distribute:", distribute_idlis(test_case))
    print()
